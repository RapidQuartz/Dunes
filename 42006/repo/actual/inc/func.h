/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   func.h                                             :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: akjoerse <akjoerse@student.42berlin.de>    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/05/22 14:31:53 by akjoerse          #+#    #+#             */
/*   Updated: 2025/05/24 17:52:10 by akjoerse         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef FUNC_H
# define FUNC_H
# include "struct.h"
//// ////  ////  //////////////////////////////////////////////////////////////
//// MAIN: ////  //////////////////////////////////////////////////////////////
//// ////  ////  //////////////////////////////////////////////////////////////
void	free_map(t_fdf *fdf);
int	key_handler(int key, void *param);
int	close_handler(void *param);
void	check_params(int arg, char **param);
//// ////  ////  //////////////////////////////////////////////////////////////
//// INIT: ////  //////////////////////////////////////////////////////////////
//// ////  ////  //////////////////////////////////////////////////////////////
void	init_fdf(t_fdf *fdf);
void	init_dim(t_fdf *fdf);
void	init_map(t_fdf *fdf, t_dim *dim, int x, int y);
void	init_img(t_fdf *fdf);
void	init_mlx(t_fdf *fdf);
//// ////  ////  //////////////////////////////////////////////////////////////
//// PARSE:////  //////////////////////////////////////////////////////////////
//// ////  ////  //////////////////////////////////////////////////////////////
void	read_raw_map(t_fdf *fdf);
void	split_map_str(t_fdf *fdf, t_map *map, int x, int y);
//// ////  ////  //////////////////////////////////////////////////////////////
//// COLOR:////  //////////////////////////////////////////////////////////////
//// ////  ////  //////////////////////////////////////////////////////////////
char	*extract_color(char *col, int start);
//// ////  ////  //////////////////////////////////////////////////////////////
//// HELPER:///  //////////////////////////////////////////////////////////////
//// ////  ////  //////////////////////////////////////////////////////////////
int		ft_hextoi(char n);
int		ft_abs(int num);
void	end_fdf(t_fdf *fdf, int err_code);
void	free_map(t_fdf *fdf);
//// ////  ////  //////////////////////////////////////////////////////////////
//// MAP:  ////  //////////////////////////////////////////////////////////////
//// ////  ////  //////////////////////////////////////////////////////////////
void	set_points(char ***lmn, t_fdf *fdf, int x, int y);
int		get_lmn_len(char *lmn);
char	*get_height(char *num, int end);
char	*extract_color(char *col, int start);
int		convert_color(char *col, int mode);
//// ////  ////  //////////////////////////////////////////////////////////////
//// PROJ: ////  //////////////////////////////////////////////////////////////
//// ////  ////  //////////////////////////////////////////////////////////////
void	get_projection(t_fdf *fdf, t_pts **pts, t_pro *pro);
void	proj_next_col(t_fdf *fdf, t_pts **pts, t_pro *pro);
void	proj_next_row(t_fdf *fdf, t_pts **pts, t_pro *pro);
//// ////  ////  //////////////////////////////////////////////////////////////
//// DRAW: ////  //////////////////////////////////////////////////////////////
//// ////  ////  //////////////////////////////////////////////////////////////
void	draw_image(t_fdf *fdf, t_pro *pro);
void	draw_horizontal(t_fdf *fdf, t_pro *pro);
void	draw_vertical(t_fdf *fdf, t_pro *pro);
void	put_pixel(t_fdf *fdf, int x, int y, int color);
#endif
//&$`~*@^%|header file for Fer De Fil project at 42berlin by akjoerse|%^@*~`$&//